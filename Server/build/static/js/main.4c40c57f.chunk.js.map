{"version":3,"sources":["focusedTweet.js","feed.js","routerComponent.js","writer.js","tweet.js","searchResultsPage.js","editProfile.js","Homepage.js","EntryInterfaces.js","Buttons.js","mainPage.js","index.js"],"names":["FocusTweet","id","ReactDOM","render","param","body","this","props","referencedTweet","document","querySelector","renderComments","React","Component","FeedPage","Router","target","username","cookie","split","react","TweetWriter","deleteMedia","setState","sendMedia","mediaState","state","imgPreview","videoPreview","hidden","src","newTweet","type","text","message","option","tweetid","value","length","style","color","innerHTML","isComment","rtWithComment","fetch","method","JSON","stringify","credentials","headers","then","response","form","formData","FormData","status","postTweet","edit","editTweet","fetchTweet","json","filelocation","mimetype","get","blob","url","URL","createObjectURL","includes","imageInput","file","fReader","FileReader","imagePreview","readAsDataURL","files","onloadend","event","result","checkLength","counter","fontWeight","onInput","backgroundColor","resize","cols","rows","placeholder","position","left","right","alt","onClick","triggerClick","cursor","width","controls","name","accept","borderColor","borderRadius","top","height","click","TweetRenderer","getTweets","tweets","referencedtweet","i","Tweet","getInteractions","likesLabel","dislikesLabel","commentsLabel","sharesLabel","promises","likesBody","dislikesBody","commentsBody","sharesBody","push","fetchInteractions","Promise","all","textPromise","Like","action","submitInteraction","Dislike","getTweetData","renderTweetData","tweet_date","focus","date","avatarContainer","replace","imgMedia","videoMedia","shared","moveEditButtons","shareTweet","CommentTweet","deleteTweet","borderBottom","textAlign","borderStyle","RetweetComment","getCommentTweet","renderCommentData","getCommentedTweet","refenrece","renderCommentedData","avatar","share","focusTweet","focusOriginal","Results","fontSize","searchParam","UserResults","getUsers","firstSplit","secondSplit","showUsers","Usernames","componentDiv","components","UserComponent","getAvatars","showProfile","EditPage","verifyUsernameInput","usernameInput","changeInputCheckmark","serverSideCheck","verifyMailInput","mailInput","verifyCurrentPassInput","passInput","verifyNewPassInput","passInput1","passInput2","input","submit","submitDelete","Logout","window","location","reload","htmlFor","elementId","Homepage","getElementById","MenuBar","renderWriter","showSearchBar","searchBar","logo","search","e","preventDefault","renderProfile","renderFeed","onSubmit","Profile","goToEditPage","browseAvatar","followUnfollow","followButton","getFollowsCount","changeAvatar","getProfile","getButtonState","followers","follows","display","borderLeft","borderRight","Login","submitLogin","LoginForm","myFormData","errorDisplay","passMatch","validMail","validUser","Register","submitRegister","RegisterForm","messageContainer","checkPasswordMatch","pass1","pass2","userValidation","emailValidation","email","test","RegisterButton","changePage","margin","LoginButton","mainPage","LoggedIn"],"mappings":"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","file":"static/js/main.4c40c57f.chunk.js","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {TweetRenderer} from \"./tweet\"\n\nclass FocusTweet extends React.Component{\n    render(){\n        return(\n            <div>\n                <div id={\"focusedTweetRoot\"}></div>\n                <div id={\"commentsDiv\"}></div>\n            </div>\n        )\n    }\n    componentDidMount(){\n        ReactDOM.render(<TweetRenderer param={\"tweetById\"} body={this.props.referencedTweet}/>, document.querySelector(\"#focusedTweetRoot\"));\n        ReactDOM.render(<TweetRenderer param={\"comments\"} body={this.props.referencedTweet} renderComments={true}/>, document.querySelector(\"#commentsDiv\"));\n    }\n}\n\nexport{FocusTweet}","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {TweetRenderer} from \"./tweet\"\n\nclass FeedPage extends React.Component{\n    render(){\n        return(\n            <div id={\"feedDiv\"}></div>\n        )\n    }\n    componentDidMount(){\n        ReactDOM.render(<TweetRenderer param={\"feedTweets\"}/>, document.querySelector(\"#feedDiv\"));\n    }\n}\n\nexport{FeedPage}","import react from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {FocusTweet} from \"./focusedTweet\"\nimport {Profile} from \"./Homepage\"\nimport {FeedPage} from \"./feed\"\n\nclass Router extends react.Component{\n    render(){\n        return(null)\n    }\n    componentDidMount(){\n        switch(this.props.target){\n            case \"focusedTweet\":{\n                ReactDOM.render(<FocusTweet referencedTweet={this.props.referencedTweet}/>, document.querySelector(\"#SecondDiv\"));\n                break;\n            }\n            case \"profile\":{\n                ReactDOM.render(<Profile username={document.cookie.split(\"username=\")[1]}/>, document.querySelector(\"#SecondDiv\"));\n                break;\n            }\n            case \"feed\":{\n                ReactDOM.render(<FeedPage/>, document.querySelector(\"#SecondDiv\"));\n                break;\n            }\n            default:{\n                break;\n            }\n        }\n    }\n}\n\nexport{Router}","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport {Router} from \"./routerComponent\"\n\nclass TweetWriter extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {sendMedia: false, mediaState: \"Empty\"};\n    }\n    render() {\n        return (\n            <div>\n                <br/><br/>\n                <p id={\"message\"} style={{fontWeight:\"bold\"}}></p>\n                <br/>\n                <div id={\"text\"}>\n                    <textarea id={\"TextContent\"} onInput={this.checkLength} style={{backgroundColor:\"#2b2b2b\", color:\"white\", resize:\"none\"}} cols={\"150\"} rows={\"8\"} placeholder={\"Write something...\"}/>\n                </div>\n                <br/>\n                <p id={\"lengthCounter\"} style={{position:\"absolute\", fontWeight:\"bold\", color:\"rgb(59,134,53)\", left:\"1050px\"}}></p>\n                <br/><br/><br/>\n                <div id={\"media\"}>\n                    <div style={{position:\"absolute\", right:\"50px\"}}>\n                        <img alt=\"\" onClick={this.triggerClick} style={{cursor:\"pointer\", width:\"75px\"}} src={\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/Icons8_flat_add_image.svg/1024px-Icons8_flat_add_image.svg.png\"}/>\n                    </div>\n                    <img alt=\"\" id={\"imgPreview\"} hidden={true} style={{width:\"250px\"}}/>\n                    <video id={\"videoPreview\"} hidden={true} controls={true} style={{width:\"250px\"}}/>\n                    <form id={\"mediaInput\"} hidden={true}>\n                        <input name={\"tweetMedia\"} id={\"TFile\"} accept={\"image/jpeg, image/png, image/gif, video/mp4\"} onInput={this.imageInput} type={\"file\"}/>\n                    </form>\n                    <button onClick={this.postTweet} style={{cursor:\"pointer\", backgroundColor:\"deepskyblue\", borderColor:\"deepskyblue\", borderRadius:\"15%\", width:\"75px\", position:\"absolute\", left:\"115px\", top:\"350px\"}}>Post</button>\n                    <button onClick={this.deleteMedia} style={{cursor:\"pointer\", backgroundColor:\"deepskyblue\", borderColor:\"deepskyblue\", borderRadius:\"15%\", width:\"115px\", height:\"22px\", position:\"absolute\", left:\"215px\", top:\"350px\"}}>Delete media</button>\n                </div>\n            </div>\n        )\n    }\n\n    deleteMedia = () => {\n        this.setState({sendMedia: false});\n        let mediaState = this.state.mediaState;\n        if (mediaState === \"Keep\" || mediaState === \"New\" || mediaState === \"Change\") this.setState({mediaState:\"Delete\"});\n        let imgPreview = document.querySelector(\"#imgPreview\");\n        let videoPreview = document.querySelector(\"#videoPreview\");\n        imgPreview.hidden = true;\n        imgPreview.src = \"\";\n        videoPreview.hidden = true;\n        videoPreview.src = \"\";\n    }\n\n    newTweet = () => {\n        let text = document.querySelector(\"#TextContent\");\n        let message = document.querySelector(\"#message\");\n        let type;\n        let option = this.props.tweetid ? this.props.tweetid : \"nada\";\n        if (text.value.length > 240){\n            message.style.color = \"red\";\n            message.innerHTML = \"Character limit surpassed!\";\n        }\n        else{\n            if (this.props.tweetid){\n                if(this.props.isComment){\n                    type = \"comment\";\n                }\n                else{\n                    if (text.value.length === 0 && !this.state.sendMedia){\n                        type = this.props.rtWithComment ? \"rtWithComment2\" : \"rt\";\n                    }\n                    else{\n                        type = \"rtWithComment\";\n                    }\n                }\n            }\n            else{\n                type = \"originalPost\";\n            }\n        }\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/postText\", {\n             method:\"POST\",\n            body: JSON.stringify({text:text.value, type:type}),\n            credentials:\"include\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                \"Option\":option\n            }\n        }).then(response => response.text())\n        .then(text => {\n            if (this.state.sendMedia){\n                let form = document.querySelector(\"#mediaInput\");\n                let formData = new FormData(form);\n                fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/postMedia\", {\n                    method:\"POST\",\n                    body: formData,\n                    credentials:\"include\",\n                    headers:{\n                        \"Option\":text\n                    }\n                }).then(response => {\n                    if (response.status === 200){\n                        message.style.color = \"green\";\n                        message.innerHTML = \"Tweet posted.\";\n                    }\n                })\n            }\n            else{\n                message.style.color = \"green\";\n                message.innerHTML = \"Tweet posted.\";\n            }\n        })\n    }\n    postTweet = () => {\n        if (this.props.edit){\n            this.editTweet();\n        }\n        else{\n            this.newTweet();\n        }\n    }\n    editTweet(){\n        let text = document.querySelector(\"#TextContent\");\n        let message = document.querySelector(\"#message\");\n        if (text.value.length > 240){\n            message.style.color = \"red\";\n            message.innerHTML = \"Character limit surpassed!\";\n        }\n        else{\n            fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/DataEdition/editText\", {\n                method:\"POST\",\n                credentials:\"include\",\n                body:JSON.stringify({id:this.props.tweetid, text:document.querySelector(\"#TextContent\").value}),\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                }\n            }).then(response => {\n                if (response.status === 200){\n                    let mediaState = this.state.mediaState;\n                    if (mediaState !== \"Keep\" && mediaState !== \"Empty\"){\n                        let body = mediaState === \"Change\" || mediaState === \"New\" ? \n                        new FormData(document.querySelector(\"#mediaInput\")) : \"nada\";\n                        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/DataEdition/editMedia\", {\n                            method:\"POST\",\n                            credentials:\"include\",\n                            body:body,\n                            headers:{\n                                \"Option\":this.props.tweetid,\n                                \"Option2\":mediaState\n                            }\n                        }).then(response => {\n                            if (response.status === 200){\n                                ReactDOM.render(<Router target={\"feed\"}/>, document.querySelector(\"#SecondDiv\"));\n                            }\n                        })\n                    }\n                    else{\n                        ReactDOM.render(<Router target={\"feed\"}/>, document.querySelector(\"#SecondDiv\"));\n                    }\n                }\n            })\n        }\n    }\n    componentDidMount() {\n        document.querySelector(\"#lengthCounter\").innerHTML = \"Characters 0/240\";\n        if (this.props.edit){\n            this.fetchTweet();\n        }\n    }\n    fetchTweet = () => {\n        let text = document.querySelector(\"#TextContent\");\n        let imgPreview = document.querySelector(\"#imgPreview\");\n        let videoPreview = document.querySelector(\"#videoPreview\");\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getTweetById\", {\n            method:\"POST\",\n            body:this.props.tweetid,\n            credentials:\"include\"\n        }).then(response => response.json())\n        .then(json => {\n            text.value = json.text;\n            if (json.filelocation){\n                this.setState({mediaState:\"Keep\"});\n                fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getPostMedia\", {\n                    method:\"POST\",\n                    body:json.filelocation,\n                    credentials:\"include\"\n                }).then(response => {\n                    let mimetype = response.headers.get(\"Content-Type\");\n                    let blobPromise = response.blob();\n                    blobPromise.then(blob => {\n                        let url = URL.createObjectURL(blob);\n                        if (mimetype.includes(\"image\")){\n                            imgPreview.hidden = false;\n                            imgPreview.src = url;\n                        }\n                        else{\n                            videoPreview.hidden = false;\n                            videoPreview.src = url;\n                        }\n                    })\n                })\n            }\n        })\n    }\n    triggerClick(){\n        document.querySelector(\"#TFile\").click();\n    }\n    imageInput = () => {\n        this.setState({sendMedia: true});\n        if (this.state.mediaState === \"Empty\") this.setState({mediaState: \"New\"});\n        else if (this.state.mediaState  === \"Delete\" || this.state.mediaState === \"Keep\") this.setState({mediaState:\"Change\"});\n        let file = document.querySelector(\"#TFile\");\n        let fReader = new FileReader();\n        let imagePreview = document.querySelector(\"#imgPreview\");\n        let videoPreview = document.querySelector(\"#videoPreview\");\n        fReader.readAsDataURL(file.files[0]);\n        fReader.onloadend = function(event){\n            let mimeType = event.target.result.split(\";\")[0].split(\":\")[1].split(\"/\")[0];\n            if (mimeType === \"image\") {\n                videoPreview.src = \"\";\n                videoPreview.hidden = true;\n                imagePreview.hidden = false;\n                imagePreview.src = event.target.result;\n            }\n            else{\n                imagePreview.src = \"\";\n                videoPreview.hidden = false;\n                imagePreview.hidden = true;\n                videoPreview.src = event.target.result;\n            }\n        }\n    }\n\n    checkLength = () => {\n        let text = document.querySelector(\"#TextContent\");\n        let counter = document.querySelector(\"#lengthCounter\");\n        counter.innerHTML = \"Characters \" + text.value.length + \"/240\"\n        if (text.value.length > 240){\n            counter.style.color = \"rgb(141,14,14)\";\n        }\n        else{\n            counter.style.color = \"rgb(59,134,53)\";\n        }\n        return text.value.length;\n    }\n}\n\nexport{TweetWriter}","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport {TweetWriter} from \"./writer\"\nimport {Router} from \"./routerComponent\"\n\nclass TweetRenderer extends React.Component{\n    render(){\n        this.getTweets();\n        return(\n            <div>\n                <div id={\"tweetDiv\"}></div>\n                <div id={\"commentsDIV\"}></div>\n            </div>\n        )\n    }\n    getTweets = () => {\n        let url;\n        switch (this.props.param){\n            case \"userTweets\":{\n                url = \"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getUserTweets\";\n                break;\n            }\n            case \"tweetById\":{\n                url = \"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getTweetById\";\n                break;\n            }\n            case \"tweetByText\":{\n                url = \"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getTweetByText\";\n                break;\n            }\n            case \"feedTweets\":{\n                url = \"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getFeedTweets\";\n                break;\n            }\n            case \"comments\":{\n                url = \"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getTweetComments\";\n                break;\n            }\n            default:{\n                break;\n            }\n        }\n        fetch(url, {\n            method:\"POST\",\n            body:this.props.body,\n            credentials:\"include\"\n        }).then(response => response.json())\n        .then(json => {\n            let tweets = [];\n            if (this.props.param === \"tweetById\"){\n                if(json.type === \"comment\" || json.type === \"originalPost\" || json.type === \"rt\")\n                    tweets[0] = <Tweet type={json.type} username={json.username} tweetid={json.tweetid} referencedtweet={json.referencedtweet}/>;\n                else if (json.type === \"rtWithComment\" || json.type === \"rtWithComment2\")\n                    tweets[0] = <RetweetComment type={json.type} tweetid={json.tweetid} username={json.username} referencedtweet={json.referencedtweet}/>\n            }\n            else{\n                for (let i = 0; i < json.length; i++){\n                    if (json[i].type === \"rtWithComment\"){\n                        tweets[i] = <RetweetComment type={json[i].type} tweetid={json[i].tweetid} username={json[i].username} referencedtweet={json[i].referencedtweet}/>;\n                    }\n                    else{\n                        if (json[i].type === \"rtWithComment2\"){\n                            tweets[i] = <RetweetComment type={json[i].type} tweetid={json[i].tweetid} username={json[i].username} referencedtweet={json[i].referencedtweet}/>;\n                        }\n                        else if (json[i].type === \"comment\"){\n                            if (this.props.renderComments){\n                                tweets[i] = <Tweet type={json[i].type} username={json[i].username} tweetid={json[i].tweetid} referencedtweet={json[i].referencedtweet}/>;\n                            }\n                        }\n                        else{\n                            tweets[i] = <Tweet type={json[i].type} username={json[i].username} tweetid={json[i].tweetid} referencedtweet={json[i].referencedtweet}/>;\n                        }\n                    }\n                }\n            }\n            if (this.props.renderComments){\n                ReactDOM.render(tweets, document.querySelector(\"#commentsDIV\"));\n            }\n            else{\n                ReactDOM.render(tweets, document.querySelector(\"#tweetDiv\"));\n            }\n        })\n    }\n}\n\nclass Tweet extends React.Component{\n    render(){\n        return(\n            <div>\n                <br/>\n                <div style={{borderBottom:\"solid\", borderColor:\"black\"}}>\n                    <div>\n                        <p id={\"shared\" + this.props.tweetid} style={{textAlign:\"justify\", position:\"relative\", left:\"140px\"}}></p>\n                    </div>\n                    <div id={\"replyingTo\"} hidden={true} style={{textAlign:\"justify\"}}>\n                        <p id={\"comment\" + this.props.tweetid} style={{cursor:\"pointer\", position:\"relative\", left:\"140px\", top:\"65px\"}}></p>\n                    </div>\n                    <div id={\"poster\"} style={{textAlign:\"justify\"}}>\n                        <p id={\"username\" + this.props.tweetid} style={{cursor:\"pointer\", position:\"relative\", left:\"140px\", top:\"0px\"}}></p>\n                        <img id={\"userAvatar\" + this.props.tweetid} alt={\"\"} style={{cursor:\"pointer\", width:\"50px\", borderRadius:\"50%\", borderStyle:\"solid\", borderColor:\"deepskyblue\", position:\"relative\", left:\"65px\", top:\"-60px\"}} src={\"\"}/>\n                    </div>\n                    <div id={\"textAndMedia\"} onClick={this.focus} style={{textAlign:\"justify\"}}>\n                        <p id={\"tweetText\" + this.props.tweetid} onClick={this.focus} style={{position:\"relative\", left:\"140px\", top:\"-60px\", fontWeight:\"bold\"}}></p>\n                        <video id={\"tweetVideo\" + this.props.tweetid} controls={true} hidden={true} style={{position:\"relative\", left:\"130px\", top:\"-25px\", borderStyle:\"solid\", borderColor:\"Gray\", borderRadius:\"5%\", width:\"350px\"}}/>\n                        <img id={\"tweetImg\" + this.props.tweetid} hidden={true} alt={\"\"} style={{position:\"relative\", left:\"130px\", top:\"-25px\", borderStyle:\"solid\", borderColor:\"Gray\", borderRadius:\"5%\", width:\"350px\"}}/>\n                    </div>\n                    <div id={\"interactions\"} style={{textAlign:\"justify\"}}>\n                        <br/><br/>\n                        <p id={\"tweetDate\" + this.props.tweetid} style={{position:\"relative\", top:\"-35px\", left:\"140px\", color:\"gainsboro\"}}></p>\n                        <p style={{borderBottom:\"solid\", borderColor:\"GrayText\", position:\"relative\", top:\"-40px\"}}/>\n                        <img alt={\"\"} style={{cursor:\"pointer\", width:\"50px\", position:\"relative\", top:\"-25px\", left:\"140px\"}} onClick={this.Like} src={\"https://i.pinimg.com/originals/ff/ec/ac/ffecac79568c406a212691a0d97ae858.png\"}/>\n                        <img alt={\"\"} style={{cursor:\"pointer\", width:\"50px\", position:\"relative\", top:\"-25px\", left:\"180px\"}} onClick={this.Dislike} src={\"https://image.flaticon.com/icons/png/512/196/196587.png\"}/>\n                        <img alt={\"\"} onClick={this.CommentTweet} style={{cursor:\"pointer\", width:\"50px\", position:\"relative\", top:\"-25px\", left:\"220px\"}} src={\"https://cdn3.iconfinder.com/data/icons/social-messaging-ui-color-shapes-2-1/254000/77-512.png\"}/>\n                        <img alt={\"\"} onClick={this.shareTweet} style={{cursor:\"pointer\", width:\"50px\", position:\"relative\", top:\"-25px\", left:\"260px\"}} src={\"https://pngimg.com/uploads/share/share_PNG31.png\"}/>\n                    </div>\n                </div>\n                <div style={{position:\"absolute\"}}>\n                    <p id={\"Likes\" + this.props.tweetid} style={{position:\"relative\", left:\"120px\", top:\"-40px\"}}>Likes: 0</p>\n                    <p id={\"Dislikes\" + this.props.tweetid}  style={{position:\"relative\", left:\"200px\", top:\"-75px\"}}>Dislikes: 0</p>\n                    <p id={\"Comments\" + this.props.tweetid}  style={{position:\"relative\", left:\"305px\", top:\"-110px\"}}>Comments: 0</p>\n                    <p id={\"Shares\" + this.props.tweetid}  style={{position:\"relative\", left:\"395px\", top:\"-145px\"}}>Shares: 0</p>\n                </div>\n                <div id={\"edition\" + this.props.tweetid} hidden={true} style={{position:\"absolute\"}} >\n                    <img id={\"delete\" + this.props.tweetid} alt={\"\"} onClick={this.deleteTweet} style={{cursor:\"pointer\", width:\"40px\", position: \"relative\", left:\"480px\", top:\"-320px\"}} src={\"https://vectorified.com/images/delete-icon-png-4.png\"}/>\n                    <img id={\"edit\" + this.props.tweetid} alt={\"\"} onClick={this.editTweet} style={{cursor:\"pointer\", width:\"37px\", position: \"relative\", left:\"400px\", top:\"-320px\"}} src={\"https://cdn.pixabay.com/photo/2017/06/06/00/33/edit-icon-2375785_640.png\"} />\n                </div>\n            </div>\n        )\n    }\n    componentDidMount(){\n        if(document.cookie.split(\"username=\")[1] === this.props.username) {\n            document.querySelector(\"#edition\" + this.props.tweetid).hidden = false;\n        }\n        this.getTweetData();\n        this.getInteractions();\n    }\n    editTweet = () => {\n        let id = this.props.type === \"rt\" ? this.props.referencedtweet : this.props.tweetid;\n        ReactDOM.render(<TweetWriter edit={true} tweetid={id}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    getInteractions = () => {\n        let likesLabel = document.querySelector(\"#Likes\" + this.props.tweetid);\n        let dislikesLabel = document.querySelector(\"#Dislikes\" + this.props.tweetid);\n        let commentsLabel = document.querySelector(\"#Comments\" + this.props.tweetid);\n        let sharesLabel = document.querySelector(\"#Shares\" + this.props.tweetid);\n        let id = this.props.type === \"rt\" ? this.props.referencedtweet : this.props.tweetid;\n        let promises = [];\n        let likesBody = {type: \"Like\", id:id};\n        let dislikesBody = {type:\"Dislike\", id:id};\n        let commentsBody = {type:\"Comments\", id:id};\n        let sharesBody = {type:\"Shares\", id:id};\n        promises.push(this.fetchInteractions(likesBody));\n        promises.push(this.fetchInteractions(dislikesBody));\n        promises.push(this.fetchInteractions(commentsBody));\n        promises.push(this.fetchInteractions(sharesBody));\n        Promise.all(promises).then(response => {\n            let textPromise = [];\n            for (let i = 0; i < response.length; i++){\n                textPromise[i] = response[i].text();\n            }\n            Promise.all(textPromise).then(text => {\n                likesLabel.innerHTML = \"Likes: \" + text[0];\n                dislikesLabel.innerHTML = \"Dislikes: \" + text[1];\n                commentsLabel.innerHTML = \"Comments: \" + text[2];\n                sharesLabel.innerHTML = \"Shares: \" + text[3];\n            })\n        })\n    }\n    fetchInteractions = (body) => {\n        let promise = fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/Interactions\",{\n            method:\"POST\",\n            body:JSON.stringify(body),\n            credentials:\"include\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        })\n        return promise;\n    }\n    Like = () => {\n        let id = this.props.type === \"rt\" ? this.props.referencedtweet : this.props.tweetid;\n        let body = {id:id, action:\"Like\"};\n        this.submitInteraction(body);\n    }\n    Dislike = () => {\n        let id = this.props.type === \"rt\" ? this.props.referencedtweet : this.props.tweetid;\n        let body = {id:id, action:\"Dislike\"};\n        this.submitInteraction(body);\n    }\n    submitInteraction = (body) =>{\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/LikeDislike\", {\n            method:\"POST\",\n            body:JSON.stringify(body),\n            credentials:\"include\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }).then(response => {\n            if (response.status === 200) this.getInteractions();\n        })\n    }\n    getTweetData = () => {\n        let id = this.props.referencedtweet && this.props.type !== \"comment\" ? this.props.referencedtweet : this.props.tweetid;\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getTweetById\", {\n            method:\"POST\",\n            body:id,\n            credentials:\"include\"\n        }).then(response => response.json())\n        .then(json => {\n            this.renderTweetData(json.username, json.filelocation, json.text, json.tweet_date);\n        })\n    }\n    focus = () => {\n        let id = this.props.type === \"rt\" ? this.props.referencedtweet : this.props.tweetid;\n        ReactDOM.render(<Router target={\"focusedTweet\"} referencedTweet={id}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    renderTweetData = (username, filelocation, text, date) => {\n        let avatarContainer = document.querySelector(\"#userAvatar\" + this.props.tweetid);\n        document.querySelector(\"#tweetText\" + this.props.tweetid).innerHTML = text.replace(/(\\n)+/g, '<br/>');\n        let imgMedia = document.querySelector(\"#tweetImg\" + this.props.tweetid);\n        let videoMedia = document.querySelector(\"#tweetVideo\" + this.props.tweetid);\n        document.querySelector(\"#tweetDate\" + this.props.tweetid).innerHTML = date.replace(\"T\", \" \").split(\".\")[0] + \" GMT\";\n        let shared = document.querySelector(\"#shared\" + this.props.tweetid);\n        document.querySelector(\"#username\" + this.props.tweetid).innerHTML = username;\n        if (this.props.type === \"rt\") shared.innerHTML = \"Shared by \" + this.props.username;\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getAvatar\", {\n            method:\"POST\",\n            body: username,\n            credentials:\"include\"\n        }).then(response => response.blob())\n        .then(blob => {\n            let url = URL.createObjectURL(blob);\n            avatarContainer.src = url;\n        })\n        if (filelocation){\n            this.moveEditButtons();\n            fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getPostMedia\", {\n                method:\"POST\",\n                body:filelocation,\n                credentials:\"include\"\n            }).then(response => {\n                let mimetype = response.headers.get(\"Content-Type\");\n                let blobPromise = response.blob();\n                blobPromise.then(blob => {\n                    let url = URL.createObjectURL(blob);\n                    if (mimetype.includes(\"image\")){\n                        imgMedia.hidden = false;\n                        imgMedia.src = url;\n                    }\n                    else{\n                        videoMedia.hidden = false;\n                        videoMedia.src = url;\n                    }\n                })\n            })\n        }\n    }\n    moveEditButtons = () => {\n        if (!document.querySelector(\"#edition\" + this.props.tweetid).hidden){\n            document.querySelector(\"#edit\" + this.props.tweetid).style.top = \"-520px\";\n            document.querySelector(\"#delete\" + this.props.tweetid).style.top = \"-520px\";\n        }\n    }\n    shareTweet = () => {\n        let id = this.props.type === \"rt\" ? this.props.referencedtweet : this.props.tweetid;\n        ReactDOM.render(<TweetWriter tweetid={id}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    CommentTweet = () => {\n        let id = this.props.type === \"rt\" ? this.props.referencedtweet : this.props.tweetid;\n        ReactDOM.render(<TweetWriter tweetid={id} isComment={true}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    deleteTweet = () => {\n        let id = this.props.type === \"rt\" ? this.props.referencedtweet : this.props.tweetid;\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/DataEdition/deleteTweet\", {\n            method:\"POST\",\n            credentials:\"include\",\n            body:id\n        }).then(response => {\n            if (response.status === 200){\n                ReactDOM.render(<Router target={\"feed\"}/>, document.querySelector(\"#SecondDiv\"));\n            }\n        })\n    }\n}\n\nclass RetweetComment extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={refenrece:null}\n    }\n    render(){\n        return(\n            <div>\n                <div id={\"edition\" + this.props.tweetid} hidden={true} style={{position:\"absolute\"}} >\n                    <img id={\"delete\" + this.props.tweetid} alt={\"\"} onClick={this.deleteTweet} style={{cursor:\"pointer\", width:\"40px\", position: \"relative\", left:\"480px\"}} src={\"https://vectorified.com/images/delete-icon-png-4.png\"}/>\n                    <img id={\"edit\" + this.props.tweetid} alt={\"\"} onClick={this.editTweet} style={{cursor:\"pointer\", width:\"37px\", position: \"relative\", left:\"400px\"}} src={\"https://cdn.pixabay.com/photo/2017/06/06/00/33/edit-icon-2375785_640.png\"} />\n                </div>\n                <div id={\"SharedComment\"}>\n                    <div id>\n                        <p id={\"shared\" + this.props.tweetid} style={{textAlign:\"justify\", position:\"relative\", left:\"140px\"}}></p>\n                    </div>\n                    <div>\n                        <p id={\"replying\" + this.props.tweetid} style={{cursor:\"pointer\", position:\"relative\", left:\"-385px\", top:\"65px\"}}></p>\n                    </div>\n                    <div style={{textAlign:\"justify\"}}>\n                        <p id={\"username\" + this.props.tweetid} style={{cursor:\"pointer\", position:\"relative\", left:\"140px\", top:\"0x\"}}></p>\n                        <img id={\"avatar\" + this.props.tweetid} alt={\"\"} style={{cursor:\"pointer\", width:\"50px\", borderRadius:\"50%\", borderStyle:\"solid\", borderColor:\"deepskyblue\", position:\"relative\", left:\"65px\", top:\"-40px\"}} src={\"\"}/>\n                    </div>\n                    <div onClick={this.focusTweet} style={{textAlign:\"justify\"}}>\n                        <p id={\"text\" + this.props.tweetid} style={{position:\"relative\", left:\"140px\", top:\"-60px\", fontWeight:\"bold\"}}></p>\n                        <video id={\"video\" + this.props.tweetid} controls={true} hidden={true} style={{position:\"relative\", left:\"130px\", top:\"-25px\", borderStyle:\"solid\", borderColor:\"Gray\", borderRadius:\"5%\", width:\"350px\"}}/>\n                        <img id={\"img\" + this.props.tweetid} hidden={true} alt={\"\"} src={\"\"} style={{position:\"relative\", left:\"130px\", top:\"-25px\", borderStyle:\"solid\", borderColor:\"Gray\", borderRadius:\"5%\", width:\"350px\"}}/>\n                        <p id={\"date\" + this.props.tweetid} style={{position:\"relative\", top:\"-35px\", left:\"140px\", color:\"gainsboro\"}}></p>\n                        <p style={{borderBottom:\"solid\", borderColor:\"GrayText\", position:\"relative\", top:\"-40px\"}}/>\n                    </div>\n                    <div id={\"originalTweet\"} onClick={this.focusOriginal} style={{cursor:\"pointer\", borderStyle:\"solid\", borderRadius:\"5%\", borderColor:\"black\", width:\"600px\"}}>\n                        <div>\n                            <p id={\"oUsername\" + this.props.tweetid} style={{cursor:\"pointer\", position:\"relative\", left:\"-150px\", top:\"0x\"}}></p>\n                            <img id={\"oAvatar\" + this.props.tweetid} alt={\"\"} style={{cursor:\"pointer\", width:\"50px\", borderRadius:\"50%\", borderStyle:\"solid\", borderColor:\"deepskyblue\", position:\"relative\", left:\"-250px\", top:\"-45px\"}} src={\"\"}/>\n                        </div>\n                        <div>\n                            <p id={\"oText\" + this.props.tweetid} style={{position:\"relative\", left:\"140px\", top:\"-60px\", fontWeight:\"bold\", textAlign:\"justify\"}}></p>\n                            <video id={\"oVideo\" + this.props.tweetid} controls={true} hidden={true} style={{position:\"relative\", left:\"-250px\", top:\"-25px\", borderStyle:\"solid\", borderColor:\"Gray\", borderRadius:\"5%\", width:\"350px\"}}/>\n                            <img hidden={true} id={\"oImg\" + this.props.tweetid} alt={\"\"} src={\"\"} style={{position:\"relative\", left:\"-0px\", top:\"-25px\", borderStyle:\"solid\", borderColor:\"Gray\", borderRadius:\"5%\", width:\"350px\"}}/>\n                        </div>\n                    </div>\n                    <div id={\"interactions\"} style={{textAlign:\"justify\"}}>\n                        <br/><br/>\n                        <img alt={\"\"} onClick={this.Like} style={{cursor:\"pointer\", width:\"50px\", position:\"relative\", top:\"-25px\", left:\"140px\"}} src={\"https://i.pinimg.com/originals/ff/ec/ac/ffecac79568c406a212691a0d97ae858.png\"}/>\n                        <img alt={\"\"} onClick={this.Dislike} style={{cursor:\"pointer\", width:\"50px\", position:\"relative\", top:\"-25px\", left:\"180px\"}} src={\"https://image.flaticon.com/icons/png/512/196/196587.png\"}/>\n                        <img alt={\"\"} onClick={this.CommentTweet} style={{cursor:\"pointer\", width:\"50px\", position:\"relative\", top:\"-25px\", left:\"220px\"}} src={\"https://cdn3.iconfinder.com/data/icons/social-messaging-ui-color-shapes-2-1/254000/77-512.png\"}/>\n                        <img alt={\"\"} onClick={this.share} style={{cursor:\"pointer\", width:\"50px\", position:\"relative\", top:\"-25px\", left:\"260px\"}} src={\"https://pngimg.com/uploads/share/share_PNG31.png\"}/>\n                        <p style={{borderBottom:\"solid\", borderColor:\"black\"}}/>\n                    </div>\n                </div>\n                <div style={{position:\"absolute\"}}>\n                    <p id={\"Likes\" + this.props.tweetid} style={{position:\"relative\", left:\"120px\", top:\"-70px\"}}>Likes: 0</p>\n                    <p id={\"Dislikes\" + this.props.tweetid} style={{position:\"relative\", left:\"200px\", top:\"-105px\"}}>Dislikes: 0</p>\n                    <p id={\"Comments\" + this.props.tweetid} style={{position:\"relative\", left:\"305px\", top:\"-140px\"}}>Comments: 0</p>\n                    <p id={\"Shares\" + this.props.tweetid} style={{position:\"relative\", left:\"400px\", top:\"-175px\"}}>Shares: 0</p>\n                </div>\n            </div>\n        )\n    }\n    componentDidMount(){\n        if (this.props.type === \"rtWithComment2\") document.querySelector(\"#shared\" + this.props.tweetid).innerHTML = \"Shared by \" + this.props.username;\n        if(document.cookie.split(\"username=\")[1] === this.props.username) {\n            document.querySelector(\"#edition\" + this.props.tweetid).hidden = false;\n        }\n        this.getCommentTweet();\n        this.getInteractions();\n    }\n    getCommentTweet = () => {\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getTweetById\", {\n            method:\"POST\",\n            body:id,\n            credentials:\"include\"\n        }).then(response => response.json())\n        .then(json => {\n            this.renderCommentData(json.username, json.filelocation, json.text, json.tweet_date);\n            this.getCommentedTweet(json.referencedtweet);\n        })\n    }\n    getCommentedTweet = (id) => {\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/getTweetById\", {\n            method:\"POST\",\n            body:id,\n            credentials:\"include\"\n        }).then(response => response.json())\n        .then(json => {\n            this.setState({refenrece:json.tweetid});\n            this.renderCommentedData(json.username, json.filelocation, json.text);\n        })\n    }\n    renderCommentedData = (username, filelocation, text) => {\n        document.querySelector(\"#oUsername\" + this.props.tweetid).innerHTML = username;\n        document.querySelector(\"#oText\" + this.props.tweetid).innerHTML = text.replace(/(\\n)+/g, '<br/>');\n        let imgMedia = document.querySelector(\"#oImg\" + this.props.tweetid);\n        let videoMedia = document.querySelector(\"#oVideo\" + this.props.tweetid);\n        let avatar = document.querySelector(\"#oAvatar\" + this.props.tweetid);\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getAvatar\",{\n            method:\"POST\",\n            body:username,\n            credentials:\"include\"\n        }).then(response => response.blob())\n        .then(blob => {\n            let url = URL.createObjectURL(blob);\n            avatar.src = url;\n        })\n        if (filelocation){\n            fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getPostMedia\", {\n                method:\"POST\",\n                body:filelocation,\n                credentials:\"include\"\n            }).then(response => {\n                let mimetype = response.headers.get(\"Content-Type\");\n                let blobPromise = response.blob();\n                blobPromise.then(blob => {\n                    let url = URL.createObjectURL(blob);\n                    if (mimetype.includes(\"image\")){\n                        imgMedia.hidden = false;\n                        imgMedia.src = url;\n                    }\n                    else{\n                        videoMedia.hidden = false;\n                        videoMedia.src = url;\n                    }\n                })\n            })\n        }\n    }\n    renderCommentData = (username, filelocation, text, date) => {\n        document.querySelector(\"#username\" + this.props.tweetid).innerHTML = username;\n        document.querySelector(\"#text\" + this.props.tweetid).innerHTML = text.replace(/(\\n)+/g, '<br/>');\n        document.querySelector(\"#date\" + this.props.tweetid).innerHTML = date.replace(\"T\", \" \").split(\".\")[0];\n        let imgMedia = document.querySelector(\"#img\" + this.props.tweetid);\n        let videoMedia = document.querySelector(\"#video\" + this.props.tweetid);\n        let avatar = document.querySelector(\"#avatar\" + this.props.tweetid);\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getAvatar\",{\n            method:\"POST\",\n            body:username,\n            credentials:\"include\"\n        }).then(response => response.blob())\n        .then(blob => {\n            let url = URL.createObjectURL(blob);\n            avatar.src = url;\n        })\n        if (filelocation){\n            fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getPostMedia\", {\n                method:\"POST\",\n                body:filelocation,\n                credentials:\"include\"\n            }).then(response => {\n                let mimetype = response.headers.get(\"Content-Type\");\n                let blobPromise = response.blob();\n                blobPromise.then(blob => {\n                    let url = URL.createObjectURL(blob);\n                    if (mimetype.includes(\"image\")){\n                        imgMedia.hidden = false;\n                        imgMedia.src = url;\n                    }\n                    else{\n                        videoMedia.hidden = false;\n                        videoMedia.src = url;\n                    }\n                })\n            })\n        }\n    }\n    share = () => {\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        ReactDOM.render(<TweetWriter tweetid={id} rtWithComment={true}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    CommentTweet = () => {\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        ReactDOM.render(<TweetWriter tweetid={id} isComment={true}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    focusTweet = () => {\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        ReactDOM.render(<Router target={\"focusedTweet\"} referencedTweet={id}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    focusOriginal = () => {\n        let id = this.state.refenrece;\n        ReactDOM.render(<Router target={\"focusedTweet\"} referencedTweet={id}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    getInteractions = () => {\n        let likesLabel = document.querySelector(\"#Likes\" + this.props.tweetid);\n        let dislikesLabel = document.querySelector(\"#Dislikes\" + this.props.tweetid);\n        let commentsLabel = document.querySelector(\"#Comments\" + this.props.tweetid);\n        let sharesLabel = document.querySelector(\"#Shares\" + this.props.tweetid);\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        let promises = [];\n        let likesBody = {type: \"Like\", id:id};\n        let dislikesBody = {type:\"Dislike\", id:id};\n        let commentsBody = {type:\"Comments\", id:id};\n        let sharesBody = {type:\"Shares\", id:id};\n        promises.push(this.fetchInteractions(likesBody));\n        promises.push(this.fetchInteractions(dislikesBody));\n        promises.push(this.fetchInteractions(commentsBody));\n        promises.push(this.fetchInteractions(sharesBody));\n        Promise.all(promises).then(response => {\n            let textPromise = [];\n            for (let i = 0; i < response.length; i++){\n                textPromise[i] = response[i].text();\n            }\n            Promise.all(textPromise).then(text => {\n                likesLabel.innerHTML = \"Likes: \" + text[0];\n                dislikesLabel.innerHTML = \"Dislikes: \" + text[1];\n                commentsLabel.innerHTML = \"Comments: \" + text[2];\n                sharesLabel.innerHTML = \"Shares: \" + text[3];\n            })\n        })\n    }\n    fetchInteractions = (body) => {\n        let promise = fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/Interactions\",{\n            method:\"POST\",\n            body:JSON.stringify(body),\n            credentials:\"include\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        })\n        return promise;\n    }\n    Like = () => {\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        let body = {id:id, action:\"Like\"};\n        this.submitInteraction(body);\n    }\n    Dislike = () => {\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        let body = {id:id, action:\"Dislike\"};\n        this.submitInteraction(body);\n    }\n    submitInteraction = (body) =>{\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/makeApost/LikeDislike\", {\n            method:\"POST\",\n            body:JSON.stringify(body),\n            credentials:\"include\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }).then(response => {\n            if (response.status === 200) this.getInteractions();\n        })\n    }\n    editTweet = () => {\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        ReactDOM.render(<TweetWriter edit={true} tweetid={id}/>, document.querySelector(\"#SecondDiv\"));\n    }\n    deleteTweet = () => {\n        let id = this.props.type === \"rtWithComment2\" ? this.props.referencedtweet : this.props.tweetid;\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/DataEdition/deleteTweet\", {\n            method:\"POST\",\n            credentials:\"include\",\n            body:id\n        }).then(response => {\n            if (response.status === 200){\n                ReactDOM.render(<Router target={\"feed\"}/>, document.querySelector(\"#SecondDiv\"));\n            }\n        })\n    }\n}\n\nexport{TweetRenderer}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Profile} from \"./Homepage\";\nimport {TweetRenderer} from \"./tweet\"\n\nclass Results extends React.Component{\n    render() {\n        return(\n            <div>\n                <br/>\n                <p style={{fontWeight:\"bold\", fontSize:\"x-large\"}}>Users</p>\n                <p style={{borderBottom:\"groove\", borderColor:\"rgb(88,86,86)\"}}></p>\n                <div id={\"UList\"}></div>\n                <p style={{fontWeight:\"bold\", fontSize:\"x-large\"}}>Tweets</p>\n                <p style={{borderBottom:\"groove\", borderColor:\"rgb(88,86,86)\"}}></p>\n                <div id={\"TList\"}></div>\n            </div>\n        )\n    }\n    componentDidMount() {\n        ReactDOM.render(<UserResults searchParam={this.props.searchParam}/>, document.querySelector(\"#UList\"));\n        ReactDOM.render(<TweetRenderer param={\"tweetByText\"} body={this.props.searchParam}/>, document.querySelector(\"#TList\"));\n    }\n}\n\nclass UserResults extends React.Component{\n    render() {\n        return(\n            <div id={\"userResultsDiv\"}></div>\n        )\n    }\n    componentDidMount() {\n        this.getUsers();\n    }\n    getUsers = () => {\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/profileData/userList\", {\n            method:\"POST\",\n            body:this.props.searchParam,\n            credentials:\"include\"\n        }).then(response => response.text())\n            .then(text => {\n                let firstSplit = text.split('|');\n                let secondSplit = [];\n                for (let i = 0; i < firstSplit.length; i++){\n                    if (firstSplit[i].length > 1){\n                        secondSplit[i] = firstSplit[i].split(\"username\" + i + \" : \")[1];\n                    }\n                }\n                this.showUsers(secondSplit);\n            })\n    }\n    showUsers = (Usernames) => {\n        let componentDiv = document.querySelector(\"#userResultsDiv\");\n        let components = []\n        for (let i = 0; i < Usernames.length; i++) {\n            components[i] = <UserComponent username={Usernames[i]}/>\n        }\n        ReactDOM.render(components, componentDiv);\n    }\n}\n\nclass UserComponent extends React.Component{\n    render() {\n        this.getAvatars();\n        return (\n            <div>\n                <div id={\"UserDiv\"} style={{textAlign:\"center\", borderStyle:\"groove\", borderColor:\"#585858\", backgroundColor:\"rgb(69,67,67)\", borderRadius:\"10%\", width:\"225px\"}}>\n                    <img alt={\"\"} id={\"Avatar\" + this.props.username} onClick={this.showProfile} style={{cursor:\"pointer\", position:\"absolute\", left:\"75px\", borderStyle:\"solid\", borderColor:\"deepskyblue\", borderRadius:\"50%\", width:\"35px\"}}/>\n                    <p onClick={this.showProfile} style={{cursor:\"pointer\"}}>{this.props.username}</p>\n                </div>\n                <br/>\n            </div>\n        )\n    }\n    getAvatars = () =>{\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getAvatar\", {\n            method:\"POST\",\n            body:this.props.username,\n            credentials: \"include\"\n        }).then(response => response.blob())\n            .then(blob => {\n                let url = URL.createObjectURL(blob);\n                document.querySelector(\"#Avatar\" + this.props.username).src = url;\n            })\n    }\n    showProfile = () =>{\n        ReactDOM.render(<Profile username={this.props.username}/>, document.querySelector(\"#SecondDiv\"));\n    }\n}\n\nexport {Results}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Router} from \"./routerComponent\"\nimport Main from \"./mainPage\"\n\nclass EditPage extends React.Component{\n    render(){\n        return(\n            <div style={{textAlign:\"left\"}} >\n                <br/><br/>\n                <div style={{color:\"Highlight\"}}>\n                    <h3>Edit your current data</h3>\n                    <h5>Notes: <br/>* To edit your avatar click on it in your profile page</h5>\n                    <h5>* Leave blank fields that shouldn't be edited</h5>\n                    <h5>* To make any changes you must insert your current password</h5>\n                </div>\n                <br/>\n                <p id={\"message\"} style={{color:\"red\", fontWeight:\"bold\", fontSize:\"\"}}></p>\n                <br/>\n                <form id={\"newDataForm\"}>\n                    <label htmlFor={\"username\"} style={{fontWeight:\"bold\", fontSize:\"small\", color:\"Yellow\"}} >Username: </label>\n                    <input name={\"username\"} onInput={this.verifyUsernameInput} style={{backgroundColor:\"black\", borderRadius:\"10%\", color:\"yellow\", borderColor:\"gray\"}} placeholder={\"New username...\"} type={\"text\"} />\n                    <img id={\"usernameCheck\"} alt={\"\"} style={{width:\"20px\"}} src={\"\"}/>\n                    <br/><br/>\n                    <label htmlFor={\"mail\"} style={{fontWeight:\"bold\", fontSize:\"small\", color:\"Yellow\"}} >E-Mail: </label>\n                    <input name={\"mail\"} onInput={this.verifyMailInput} style={{backgroundColor:\"black\", borderRadius:\"10%\", color:\"yellow\", borderColor:\"gray\"}} placeholder={\"New E-Mail...\"} type={\"mail\"} />\n                    <img id={\"mailCheck\"} alt={\"\"} style={{width:\"20px\"}} src={\"\"}/>\n                    <br/><br/>\n                    <label htmlFor={\"currentPass\"} style={{fontWeight:\"bold\", fontSize:\"small\", color:\"Yellow\"}} >Current password: </label>\n                    <input onInput={this.verifyCurrentPassInput} name={\"currentPass\"} style={{backgroundColor:\"black\", borderRadius:\"10%\", color:\"yellow\", borderColor:\"gray\"}} placeholder={\"Your current password...\"} type={\"password\"} />\n                    <img id={\"currentPassCheck\"} alt={\"\"} style={{width:\"20px\"}} src={\"\"}/>\n                    <br/><br/>\n                    <label htmlFor={\"newPass\"} style={{fontWeight:\"bold\", fontSize:\"small\", color:\"Yellow\"}} >New password: </label>\n                    <input onInput={this.verifyNewPassInput} name={\"newPass\"} style={{backgroundColor:\"black\", borderRadius:\"10%\", color:\"yellow\", borderColor:\"gray\"}} placeholder={\"Your new password...\"} type={\"password\"} />\n                    <img id={\"newPassCheck\"} alt={\"\"} style={{width:\"20px\"}} src={\"\"}/>\n                    <br/><br/>\n                    <label htmlFor={\"confirmation\"} style={{fontWeight:\"bold\", fontSize:\"small\", color:\"Yellow\"}} >Confirm new password: </label>\n                    <input onInput={this.verifyNewPassInput} name={\"confirmation\"} style={{backgroundColor:\"black\", borderRadius:\"10%\", color:\"yellow\", borderColor:\"gray\"}} placeholder={\"Your new password...\"} type={\"password\"} />\n                    <img id={\"newPassCheck2\"} alt={\"\"} style={{width:\"20px\"}} src={\"\"}/>\n                </form>\n                <br/>\n                <input onClick={this.submit} type={\"image\"} style={{width:\"50px\"}} alt={\"submit\"} src={\"https://image.flaticon.com/icons/png/512/223/223120.png\"}/>\n                <label style={{position:\"relative\", left:\"10px\", top:\"-20px\", color:\"greenyellow\"}} >Save changes</label>\n                <img alt={\"\"} onClick={this.submitDelete} style={{cursor:\"pointer\", width:\"40px\", position: \"relative\", left:\"480px\"}} src={\"https://vectorified.com/images/delete-icon-png-4.png\"}/>\n                <label style={{position:\"relative\", left:\"490px\", top:\"-15px\", color:\"red\", fontWeight:\"bold\"}} >Delete account</label>\n            </div>\n        )\n    }\n    changeInputCheckmark(elementId, status){\n        switch(status){\n            case \"Correct\":{\n                document.querySelector(\"#\" + elementId).src = \"https://vectorified.com/images/submit-icon-png-37.png\";\n                break;\n            }\n            case \"Incorrect\":{\n                document.querySelector(\"#\" + elementId).src = \"https://www.shareicon.net/data/2015/09/15/101562_incorrect_512x512.png\";\n                break;\n            }\n            case \"nada\":{\n                document.querySelector(\"#\" + elementId).src = \"\";\n                break;\n            }\n            default:{\n                break;\n            }\n        }\n    }\n    verifyUsernameInput = () =>{\n        let usernameInput = document.querySelector('[name=\"username\"]').value;\n        if (usernameInput.length === 0){\n            this.changeInputCheckmark(\"usernameCheck\", \"nada\");\n        }\n        else if (usernameInput.length > 25){\n            this.changeInputCheckmark(\"usernameCheck\", \"Incorrect\");\n        }\n        else{\n            this.serverSideCheck(\"usernameCheck\", usernameInput);\n        }\n    }\n    verifyMailInput = () => {\n        let mailInput = document.querySelector('[name=\"mail\"]').value;\n        if (mailInput.length === 0){\n            this.changeInputCheckmark(\"mailCheck\", \"nada\");\n        }\n        else{\n            this.serverSideCheck(\"mailCheck\", mailInput);\n        }\n    }\n    verifyCurrentPassInput = () => {\n        let passInput = document.querySelector('[name=\"currentPass\"]').value;\n        if (passInput.length === 0){\n            this.changeInputCheckmark(\"currentPassCheck\", \"Incorrect\");\n        }\n        else{\n            this.serverSideCheck(\"currentPassCheck\", passInput);\n        }\n    }\n    verifyNewPassInput = () => {\n        let passInput1 = document.querySelector('[name=\"newPass\"]').value;\n        let passInput2 = document.querySelector('[name=\"confirmation\"]').value;\n        if (passInput1.length === 0 && passInput2.length === 0){\n            this.changeInputCheckmark(\"newPassCheck\", \"nada\");\n            this.changeInputCheckmark(\"newPassCheck2\", \"nada\");\n        }\n        else if (passInput1 !== passInput2){\n            this.changeInputCheckmark(\"newPassCheck\", \"Incorrect\");\n            this.changeInputCheckmark(\"newPassCheck2\", \"Incorrect\");\n        }\n        else if ((passInput1.length < 6 || passInput2.length < 6) || \n        (passInput1.length > 32 || passInput2.length > 32)){\n            this.changeInputCheckmark(\"newPassCheck\", \"Incorrect\");\n            this.changeInputCheckmark(\"newPassCheck2\", \"Incorrect\");\n        }\n        else{\n            this.changeInputCheckmark(\"newPassCheck\", \"Correct\");\n            this.changeInputCheckmark(\"newPassCheck2\", \"Correct\");\n        }\n    }\n    serverSideCheck = (type, input) =>{\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/DataEdition/verify\", {\n            method:\"POST\",\n            body:JSON.stringify({type:type, input:input}),\n            credentials:\"include\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }).then(response => response.text())\n        .then(text => {\n            if (text === \"OK.\") this.changeInputCheckmark(type, \"Correct\");\n            else this.changeInputCheckmark(type, \"Incorrect\");\n        })\n    }\n    submit = () => {\n        let body = new FormData(document.querySelector(\"#newDataForm\"));\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/DataEdition/submitChanges\", {\n            method:\"POST\",\n            credentials:\"include\",\n            body:body\n        }).then(response => response.text())\n        .then(text => {\n            if (text === \"Changes saved.\"){\n                ReactDOM.render(<Router target={\"profile\"}/>, document.querySelector(\"#SecondDiv\"));\n            }\n            else{\n                document.querySelector(\"#message\").innerHTML = text;\n            }\n        })\n    }\n    submitDelete = () => {\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/DataEdition/deleteAccount\", {\n            method:\"GET\",\n            credentials:\"include\"\n        }).then(response => {\n            if (response.status === 200){\n                response.text().then(text => {\n                    if (text === \"Goodbye.\"){\n                        this.Logout();\n                    }\n                })\n            }\n        })\n    }\n    Logout = () => {\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/LoginSingUp/Logout\",{\n            method:\"GET\",\n            credentials:\"include\"\n        }).then(response => {\n            if (response.status === 200){\n                let cookie = document.cookie.split(\"=\")[0];\n                document.cookie = cookie + \"=; expires = Thu, 01 Jan 1970 00:00:00 UTC\";\n                ReactDOM.render(<Main/>, document.querySelector(\"#root\"));\n                window.location.reload();\n            }\n        })\n    }\n}\n\nexport default EditPage","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Results} from \"./searchResultsPage\";\nimport {TweetRenderer} from \"./tweet\"\nimport {Router} from \"./routerComponent\"\nimport {TweetWriter} from \"./writer\";\nimport EditPage from \"./editProfile\"\nimport Main from \"./mainPage\";\n\nclass Homepage extends React.Component{\n    render() {\n        ReactDOM.render(<MenuBar/>, document.getElementById(\"root\"));\n        ReactDOM.render(<Profile username={this.props.username}/>, document.getElementById(\"SecondDiv\"));\n        return(null);\n    }\n}\n\nclass MenuBar extends React.Component{\n    render() {\n        return(\n            <div style={{borderStyle:\"groove\", textAlign:\"left\", width:\"1200px\", height:\"50px\", borderColor:\"deepskyblue\", backgroundColor:\"skyblue\"}}>\n                <p id={\"Home\"} style={{cursor:\"pointer\", position:\"absolute\", left:\"95px\", color:\"black\", fontWeight:\"bold\"}} onClick={this.renderFeed}>FEED</p>\n                <img alt=\"\" onClick={this.showSearchBar} src={\"https://cdn3.iconfinder.com/data/icons/block/32/search-512.png\"} style={{cursor:\"pointer\", width:\"25px\", position:\"absolute\", left:\"740px\", top:\"60px\"}}/>\n                <form onSubmit={this.search} style={{position:\"absolute\", left:\"500px\", top: \"62px\"}}>\n                    <input hidden={true} id={\"searchBar\"} type={\"text\"} style={{borderStyle:\"solid\", borderColor:\"black\", backgroundColor:\"gray\"}} placeholder={\"Search...\"}/>\n                </form>\n                <p id={\"logo\"} style={{position:\"absolute\", left: \"605px\", color:\"black\", fontWeight:\"bold\"}}>Twitter Clone</p>\n                <p style={{cursor:\"pointer\", position:\"absolute\", left:\"1145px\", color:\"black\", fontWeight:\"bold\"}} id={\"Profile\"} onClick={this.renderProfile}>PROFILE</p>\n                <img alt=\"\" onClick={this.renderWriter} src={\"https://cdn1.iconfinder.com/data/icons/action-states-vol-4-1/48/Sed-04-512.png\"} style={{position:\"fixed\", borderRadius:\"50%\", borderColor:\"deepskyblue\", borderStyle:\"solid\", backgroundColor:\"deepskyblue\", width:\"65px\", left:\"1180px\", top:\"75%\", cursor:\"pointer\"}}/>\n            </div>\n        );\n    }\n\n    renderWriter = () => {\n        ReactDOM.render(<TweetWriter username={document.cookie.split(\"username=\")[1]}/>, document.querySelector(\"#SecondDiv\"))\n    }\n\n    showSearchBar = () => {\n        let searchBar = document.querySelector(\"#searchBar\");\n        let logo = document.querySelector(\"#logo\");\n        searchBar.hidden = !searchBar.hidden;\n        logo.style.left = searchBar.hidden ? \"605px\" : \"385px\";\n    }\n\n    search = (e) => {\n        e.preventDefault();\n        let searchBar = document.querySelector(\"#searchBar\");\n        ReactDOM.render(<Results searchParam={searchBar.value}/>, document.querySelector(\"#SecondDiv\"));\n    }\n\n    renderProfile = () =>{\n        ReactDOM.render(<Router target={\"profile\"}/>, document.getElementById(\"SecondDiv\"));\n    }\n    renderFeed = () =>{\n        ReactDOM.render(<Router target={\"feed\"}/>, document.getElementById(\"SecondDiv\"));\n    }\n}\n\n\nclass Profile extends React.Component{\n    render() {\n        return(\n            <div>\n                <br/><br/>\n                <img onClick={this.goToEditPage} id={\"editProfile\"} hidden={true} alt={\"\"} style={{position:\"absolute\", width:\"30px\", left:\"720px\", cursor:\"pointer\"}} src={\"https://cdn.pixabay.com/photo/2015/12/04/22/20/gear-1077550_960_720.png\"}/>\n                <img alt=\"\" id={\"img\"} onClick={this.browseAvatar} style={{cursor:\"pointer\", borderRadius:\"50%\", borderStyle:\"solid\", borderColor:\"deepskyblue\", width:\"100px\"}}></img>\n                <form id={\"Avatar\"}>\n                    <input id={\"browser\"} onInput={this.changeAvatar} name={\"newAvatar\"} type={\"file\"} style={{display:\"none\"}}/>\n                </form>\n                <p id={\"username\"}>USER</p>\n                <p id={\"followersCount\"} style={{color:\"aquamarine\"}}>Followers:</p>\n                <p id={\"followingCount\"} style={{color:\"aquamarine\"}}>Following:</p>\n                <button id={\"FollowButton\"} onClick={this.followUnfollow} style={{backgroundColor:\"rgb(74,92,191)\", borderColor:\"black\", color:\"rgb(255,251,207)\",width:\"100px\", height:\"25px\", borderRadius:\"15%\"}} hidden={true}></button>\n                <button id={\"LogoutButton\"} onClick={this.Logout} style={{backgroundColor:\"rgb(74,92,191)\", borderColor:\"black\", color:\"rgb(255,251,207)\",width:\"100px\", height:\"25px\", borderRadius:\"15%\"}} hidden={true}>Logout</button>\n                <br/><br/><br/>\n                <div style={{borderStyle:\"solid\", borderColor:\"gray\", borderLeft:\"none\", borderRight:\"none\", fontWeight:\"bold\"}}>\n                    <p style={{fontWeight:\"bold\"}}>Tweets</p>\n                </div>\n                <div id={\"tweets\"}></div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        if(document.cookie.split(\"username=\")[1] !== this.props.username) {\n            document.querySelector(\"#FollowButton\").hidden = false;\n        }\n        else{\n            document.querySelector(\"#LogoutButton\").hidden = false;\n            document.querySelector(\"#editProfile\").hidden = false;\n        }\n        this.getProfile();\n        ReactDOM.render(<TweetRenderer param={\"userTweets\"} body={this.props.username}/>, document.querySelector(\"#tweets\"));\n    }\n    goToEditPage = () =>{\n        ReactDOM.render(<EditPage/>, document.querySelector(\"#SecondDiv\"));\n    }\n    browseAvatar = () => {\n        if (document.cookie.split(\"username=\")[1] === this.props.username){\n            document.querySelector(\"#browser\").click();\n        }\n    }\n\n    followUnfollow = () => {\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/profileData/follow\", {\n            method:\"POST\",\n            body: this.props.username,\n            credentials:\"include\"\n        }).then(response => response.text())\n        .then(text => {\n            let followButton = document.querySelector(\"#FollowButton\");\n            if (text === \"Following\") followButton.innerHTML = \"Unfollow\";\n            else if (text === \"Unfollowed\") followButton.innerHTML = \"Follow\";\n            this.getFollowsCount();\n        })\n    }\n\n    changeAvatar = () => {\n        if (this.props.username !== null) {\n            let form = document.querySelector(\"#Avatar\");\n            let formData = new FormData(form);\n            fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/upload\", {\n                method: \"POST\",\n                credentials: \"include\",\n                body: formData\n            }).then(response => {\n                if (response.status === 200){\n                    ReactDOM.render(<Router target={\"profile\"}/>, document.querySelector(\"#SecondDiv\"));\n                }\n            })\n        }\n    }\n\n    getProfile = () =>{\n        if (this.props.username !== null) {\n            document.querySelector(\"#username\").innerHTML = this.props.username;\n            this.getFollowsCount();\n            fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/fileManager/getAvatar\", {\n                method: \"POST\",\n                credentials: \"include\",\n                body: this.props.username ? this.props.username : \"\"\n            }).then(response => response.blob())\n            .then(response => {\n                let url = URL.createObjectURL(response);\n                document.querySelector(\"#img\").src = url;\n            })\n            this.getButtonState();\n        }\n    }\n    getButtonState = () => {\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/profileData/following\", {\n            method:\"POST\",\n            body: this.props.username,\n            credentials:\"include\"\n        }).then(response => response.text())\n        .then(text => {\n            let followButton = document.querySelector(\"#FollowButton\");\n            if (text === \"True\") followButton.innerHTML = \"Unfollow\";\n            else if (text === \"False\") followButton.innerHTML = \"Follow\";\n        })\n    }\n    getFollowsCount = () => {\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/profileData/userProfile\", {\n            method: \"POST\",\n            credentials: \"include\",\n            body: this.props.username\n        }).then(response => response.json())\n        .then(response => {\n            document.querySelector(\"#followersCount\").innerHTML = \"Followers: \" + response.followers;\n            document.querySelector(\"#followingCount\").innerHTML = \"Following: \" + response.follows;\n        })\n    }\n    Logout = () => {\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/LoginSingUp/Logout\",{\n            method:\"GET\",\n            credentials:\"include\"\n        }).then(response => {\n            if (response.status === 200){\n                let cookie = document.cookie.split(\"=\")[0];\n                document.cookie = cookie + \"=; expires = Thu, 01 Jan 1970 00:00:00 UTC\";\n                ReactDOM.render(<Main/>, document.querySelector(\"#root\"));\n                window.location.reload();\n            }\n        })\n    }\n}\n\nexport {MenuBar, Profile, Homepage}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Homepage} from \"./Homepage\"\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {passMatch: false, validMail: false, validUser: false};\n    }\n    render() {\n        return(\n            <div>\n                <br/><br/><br/>\n                <p id={\"Error\"}></p>\n                <br/>\n               <form id={\"LoginForm\"}>\n                   <label>Username:     </label>\n                   <input id={\"username\"} type={\"text\"} name={\"Username\"} placeholder={\"Your username\"}/><br/><br/>\n                   <label>Password:    </label>\n                   <input type={\"password\"} name={\"Password\"} placeholder={\"Your password\"}/><br/><br/>\n                   <input type={\"button\"} value={\"Login\"} onClick={this.submitLogin}/>\n               </form>\n            </div>\n        )\n    }\n    submitLogin = () =>{\n        let LoginForm = document.querySelector(\"#LoginForm\");\n        let myFormData = new FormData(LoginForm);\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/LoginSingUp/Login\", {\n            method:\"POST\",\n            body: myFormData,\n            credentials:\"include\"\n        }).then(response => response.text())\n            .then(response => {\n                if (response.includes(\"successful\")){\n                    let username = document.querySelector(\"#username\").value;\n                    document.cookie = \"username=\" + username;\n                    ReactDOM.render(<Homepage username={username}/>, document.getElementById(\"SecondDiv\"));\n                }\n                else{\n                    let errorDisplay = document.querySelector(\"#Error\");\n                    errorDisplay.style.color = \"red\";\n                    errorDisplay.innerHTML = response;\n                }\n            })\n    }\n}\n\nclass Register extends React.Component {\n    render() {\n        return(\n            <div>\n                <br/><br/><br/>\n                <p id={\"Message\"}></p>\n                <p id={\"Message2\"}></p>\n                <p id={\"Message3\"}></p>\n                <br/>\n                <form id={\"RegisterForm\"}>\n                    <label>Username:     </label>\n                    <input id={\"username\"} onInput={this.userValidation} type={\"text\"} name={\"Username\"} placeholder={\"Your username\"}/><br/><br/>\n                    <label>E-Mail:     </label>\n                    <input id={\"mail\"} onInput={this.emailValidation} name={\"Mail\"} placeholder={\"Your E-Mail\"}/><br/><br/>\n                    <label>Password:    </label>\n                    <input id={\"pass1\"} onInput={this.checkPasswordMatch} type={\"password\"} name={\"Password\"} placeholder={\"Your password\"}/><br/><br/>\n                    <label>Confirm password:    </label>\n                    <input id={\"pass2\"} onInput={this.checkPasswordMatch} type={\"password\"} name={\"Password2\"} placeholder={\"Confirm your password\"}/><br/><br/>\n                    <input type={\"button\"} value={\"Register\"} onClick={this.submitRegister}/>\n                </form>\n            </div>\n        )\n    }\n    submitRegister = () =>{\n        if (this.state.passMatch && this.state.validMail && this.state.validUser) {\n            let RegisterForm = document.querySelector(\"#RegisterForm\");\n            let myFormData = new FormData(RegisterForm);\n            fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/loginSingUp/SingUp\", {\n                method: \"POST\",\n                body: myFormData\n            }).then(response => response.text())\n                .then((response) => {\n                    let messageContainer = document.querySelector(\"#Message\");\n                    if (response.includes(\"completed\")) {\n                        messageContainer.style.color = \"green\";\n                    } else {\n                        messageContainer.style.color = \"red\";\n                    }\n                    messageContainer.innerHTML = response;\n                });\n        }\n    }\n    checkPasswordMatch = () =>{\n        let pass1 = document.querySelector(\"#pass1\");\n        let pass2 = document.querySelector(\"#pass2\");\n        let messageContainer = document.querySelector(\"#Message\");\n        if (pass1.value !== pass2.value){\n            this.setState({passMatch: false});\n            messageContainer.style.color = \"red\";\n            messageContainer.innerHTML = \"Passwords do not match.\";\n        }\n        else{\n            if (pass1.value.length < 6 || pass1.value.length > 32){\n                this.setState({passMatch: false});\n                messageContainer.style.color = \"red\";\n                messageContainer.innerHTML = \"Password length must be between 6 to 32 characters.\";\n            }\n            else {\n                this.setState({passMatch: true});\n                messageContainer.innerHTML = \"\";\n            }\n        }\n    }\n    userValidation = () =>{\n        let username = document.querySelector(\"#username\").value;\n        let messageContainer = document.querySelector(\"#Message3\");\n        if (username.length > 32){\n            this.setState({validUser: false});\n            messageContainer.style.color = \"red\";\n            messageContainer.innerHTML = \"Username too long.\";\n        }\n        else if (username.length === 0){\n            this.setState({validUser: false});\n            messageContainer.innerHTML = \"\";\n        }\n        else{\n            this.setState({validUser: true});\n            messageContainer.innerHTML = \"\";\n        }\n    }\n    emailValidation = () =>{\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        let email = document.querySelector(\"#mail\");\n        let messageContainer = document.querySelector(\"#Message2\");\n        let result = re.test(email.value);\n        if (result){\n            this.setState({validMail: true});\n            messageContainer.innerHTML = \"\";\n        }\n        else{\n            this.setState({validMail: false});\n            if (email.value === \"\"){\n                messageContainer.innerHTML = \"\";\n            }\n            else {\n                messageContainer.style.color = \"red\";\n                messageContainer.innerHTML = \"E-Mail address is not valid.\";\n            }\n        }\n    }\n}\n\nexport {Login, Register};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {Login, Register} from \"./EntryInterfaces\";\n\nclass RegisterButton extends React.Component {\n    render() {\n        return(\n            <button onClick={this.changePage} style={{margin: \"15px\"}}>Register</button>\n        )\n    }\n    changePage = () => {\n        ReactDOM.render(<Register/>, document.getElementById(\"SecondDiv\"));\n    }\n}\n\nclass LoginButton extends React.Component {\n    render() {\n        return(\n            <button onClick={this.changePage} style={{margin: \"15px\"}}>Login</button>\n        )\n    }\n    changePage = () => {\n        ReactDOM.render(<Login/>, document.getElementById(\"SecondDiv\"));\n    }\n}\n\nexport {RegisterButton, LoginButton}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {RegisterButton, LoginButton} from \"./Buttons\"\nimport {Homepage} from \"./Homepage\";\n\nclass mainPage extends React.Component {\n    render() {\n        this.LoggedIn();\n        return (\n         <div>\n             <h1>Twitter clone</h1>\n             <h4>Made by Jesus M.</h4>\n             <RegisterButton/>\n             <LoginButton/>\n         </div>\n        )\n    }\n    LoggedIn(){\n        fetch(\"https://twitterclone-webii-proyecto3.herokuapp.com/loginSingUp/LoggedIn\",{\n            method:\"GET\",\n            credentials:\"include\"\n        }).then(response => response.text())\n            .then(response => {\n                if(response === \"True\"){\n                    ReactDOM.render(<Homepage/>, document.getElementById(\"root\"));\n                }\n            })\n    }\n}\n\nexport default mainPage;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Main from \"../src/mainPage\"\nimport \"./index.css\"\n\nReactDOM.render(<Main/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}